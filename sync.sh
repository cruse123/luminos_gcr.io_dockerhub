git config user.name "cruse123"
git config user.email "cruselee1@live.cn"

# Step 1: Clone master branch
git clone "https://${GITHUB_TOKEN}@github.com/cruse123/luminos_gcr.io_dockerhub.git"

# Step 2: Get gcr.io/google-containers images list
imgs=$(curl -ks 'https://console.cloud.google.com/m/gcr/entities/list'  -H 'cookie: SID=WgX93aiB6sVpD_FPLDBsPHvLnYdhtMXYt9bHsf_TmrmIvLkrnc11D84pIcS-3WB9fYIHKw.; HSID=A--M5SxveLfh2e7Jl; SSID=AqvfThGwBO94ONF2d; OSID=ZAX93cIEBWYq35v3hq6J5U3MNU3voHihnEqmrmIirWBfHluQ3Gjbb4E24vDuPoSVKpC2tg.'  -H 'content-type: application/json;charset=UTF-8'   --data-binary '["google-containers"]' | grep -P '"' | sed 's/"gcr.ListEntities"//'|cut -d '"' -f2 |sort|uniq)

# Step 3: Init README.md
echo -e "# Google Container Registry Mirror Synchronizer (Cloud Version)\n\n## gcr.io/google-containers -> Docker Hub repository \"cruse\"\n\n## Maintained by **LuminOS** \n\n## [Last sync: **$(date +'%Y-%m-%d %H:%M') UTC**]\n\n[![Sync Status](https://travis-ci.org/cruse123/luminos_gcr.io_dockerhub.svg?branch=sync)](https://travis-ci.org/cruse123/luminos_gcr.io_dockerhub)\n\n## Total images count: **$(echo ${imgs[@]} | grep -o ' ' | wc -l)**\n\n*INFO: This page is automatically generated by Continuous Integration Platform.*\n\n## Repo Usage\n\n\`\`\`bash\ndocker pull gcr.io/google-containers/pause-amd64:3.1\n# eq \ndocker pull cruse123/pause-amd64:3.1\n\`\`\`\n\n## [Changelog](./CHANGELOG.md)\n\n## Images\n\n" > luminos_gcr.io_dockerhub/README.md

# Step 3: Create CHANGELOG.MD if not present
if [ ! -s luminos_gcr.io_dockerhub/CHANGELOG.md ]; then
    echo -e "\n" > luminos_gcr.io_dockerhub/CHANGELOG.md
fi

# Step 4: Create temporary CHANGELOG for single run
if [ ! -f CHANGELOG.md ]; then
    touch CHANGELOG.md
fi

# Step 5: Remove all images data
rm -rf luminos_gcr.io_dockerhub/google_containers/*

# Step 6: Start LOOP
for img in ${imgs[@]}  ; do

    # 6.1 Get all tags for ${img}
    gcr_content=$(curl -ks -X GET https://gcr.io/v2/google_containers/${img}/tags/list)
    
    # 6.2 Check existence of ${img} directory (Is new img?)
    if [ ! -d luminos_gcr.io_dockerhub/google_containers/${img} ] ; then
        mkdir -p luminos_gcr.io_dockerhub/google_containers/${img}
    fi
    
    # 6.3 Create README.md for ${img}
    echo -e "[gcr.io/google-containers/${img}](https://hub.docker.com/r/cruse/${img}/tags/) \n\n----" > luminos_gcr.io_dockerhub/google_containers/${img}/README.md
    
    # 6.4 Create ${img} tag file, set ACCESS & MODIFY time by timeUploadedMs of ${img} MANIFEST
    echo ${gcr_content} | jq -r '.manifest[]|{k: .tag[0],v: .timeUploadedMs} | "touch -amd \"$(date -d @" + .v[0:10] +")\" luminos_gcr.io_dockerhub\/google_containers\/${img}\/"  +.k' | while read i; do
        eval $i
    done
    
    # 6.5 Get tag files whose last modify time is after yesterday [New Version of ${img}]
    new_tags=$(find ./luminos_gcr.io_dockerhub/google_containers/${img} -path "*.md" -prune -o -mtime -1 -type f -exec basename {} \;)
    
	#6.6 Docker pull, tag & push
    for tag in ${new_tags[@]};do
        docker pull gcr.io/google-containers/${img}:${tag}
        
        docker tag gcr.io/google-containers/${img}:${tag} ${DOCKER_USER}/${img}:${tag}
        
        docker push ${DOCKER_USER}/${img}:${tag}
        
        # Write to root CHANGELOG
        echo -e "1. Update: [gcr.io/google_containers/${img}:${tag}](https://hub.docker.com/r/cruse/${img}/tags/) \n\n" >> CHANGELOG.md
        
        # Write to ${img} README
        echo -e "**Update: [gcr.io/google_containers/${img}:${tag}](https://hub.docker.com/r/cruse/${img}/tags/)**\n" >> luminos_gcr.io_dockerhub/google_containers/${img}/README.md
    done

    # Docker hub pull token
    token=$(curl -ks https://auth.docker.io/token\?service\=registry.docker.io\&scope\=repository:${DOCKER_USER}/${img}:pull | jq -r '.token')
    
    # ${img} tags in gcr.io
    gcr_tags=$(echo ${gcr_content} | jq -r '.tags[]'|sort -r)
    
    # ${img} tags in Docker Hub
    hub_tags=$(curl -ks -H "authorization: Bearer ${token}"  https://registry.hub.docker.com/v2/${DOCKER_USER}/${img}/tags/list | jq -r '.tags[]'|sort -r)
    
    for tag in ${gcr_tags}
    do
        # If ${img}:${tag} already synced, SKIP.
        if [ ! -z "${hub_tags[@]}" ] && (echo "${hub_tags[@]}" | grep -w "${tag}" &>/dev/null); then 
             echo Image: google_containers/${img}:${tag} already exists, SKIPPING...
        else
            docker pull gcr.io/google-containers/${img}:${tag}
            docker tag gcr.io/google-containers/${img}:${tag} ${DOCKER_USER}/${img}:${tag}
            docker push ${DOCKER_USER}/${img}:${tag}
        fi
        # Write old ${img} tag to ${img} README
        echo -e "Update: [gcr.io/google_containers/${img}:${tag}](https://hub.docker.com/r/cruse/${img}/tags/)\n" >> luminos_gcr.io_dockerhub/google_containers/${img}/README.md
        
        # Cleanup docker file
        docker system prune -f -a
    done
    
    echo -e "Update: [gcr.io/google_containers/${img}](https://hub.docker.com/r/cruse/${img}/tags/)\n" >> luminos_gcr.io_dockerhub/README.md
done

# Step 7: Merge CHANGELOG from temporary
if [ -s CHANGELOG.md ]; then
    (echo -e "## $(date +%Y-%m-%d) \n" && cat CHANGELOG.md && cat luminos_gcr.io_dockerhub/CHANGELOG.md) > luminos_gcr.io_dockerhub/CHANGELOG1.md && mv luminos_gcr.io_dockerhub/CHANGELOG1.md luminos_gcr.io_dockerhub/CHANGELOG.md
fi

# Step 8: Git:Commit & Push
cd luminos_gcr.io_dockerhub
git add .
git commit -m "Sync: $(date +'%Y-%m-%d %H:%M') UTC"
git push --quiet "https://${GITHUB_TOKEN}@github.com/cruse123/luminos_gcr.io_dockerhub.git" master:master

exit 0
